#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define MEDIA   3
#define FUNC    4

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

&lt {
    quick_tap_ms = <250>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        lh: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick_tap_ms = <200>;
            flavor = "tap-unless-interrupted";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 35 36 37 38 39>;
        };
        rh: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick_tap_ms = <200>;
            flavor = "tap-unless-interrupted";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34>;
        };
        // hs: homerow_shift {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "HOMEROW_MODS";
        //     #binding-cells = <2>;
        //     tapping-term-ms = <200>;
        //     quick_tap_ms = <200>;
        //     flavor = "balanced";
        //     bindings = <&kp>, <&kp>;
        //};
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";

            bindings = <
               &kp X        &kp C        &kp D       &kp F         &kp K                                       &kp Q         &kp L        &kp U         &kp O       &kp J
               &lh LGUI R   &lh LALT S   &lh LCTL T  &lh LSHIFT H  &kp Y                                       &kp W         &rh RSHIFT N &rh RCTL E    &rh RALT A  &rh RGUI I
               &kp B        &kp G        &kp M       &kp P         &kp V                                       &kp Z         &kp COMMA    &kp DOT       &kp SQT     &kp FSLH
                            &kp GRAVE    &kp BSLH    &kp ESC       &lt NAV SPC  &lt MEDIA TAB  &lt FUNC RET    &lt SYM BSPC  &kp SEMI     &kp LBKT      &kp RBKT
            >;
        };

        nav_layer {
            label = "Navigation";

            bindings = <
               &kp LA(UP)     &kp LA(DOWN)     &kp LG(LS(LBKT)) &kp LG(LS(RBKT)) &kp LSLCK                     &kp INS       &kp HOME         &kp UP     &kp END      &kp PG_UP
               &kp LGUI       &kp LALT         &kp LCTL         &kp LSHIFT       &caps_word                    &kp DEL       &kp LEFT         &kp DOWN   &kp RIGHT    &kp PG_DN
               &kp LA(LS(UP)) &kp LA(LS(DOWN)) &kp LS(PG_UP)    &kp LS(PG_DN)    &kp LNLCK                     &kp C_PREV    &kp C_PLAY_PAUSE &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP
                                &trans         &trans           &trans           &trans      &trans  &trans    &trans        &trans           &trans     &trans
            >;
        };

        sym_layer {
            label = "Symbols";

            bindings = <
               &kp EXCL     &kp AT       &kp HASH        &kp DLLR         &kp PRCNT                              &kp CARET     &kp AMPS      &kp ASTRK     &kp LPAR    &kp RPAR
               &lh LGUI N1  &lh LALT N2  &lh LCTL N3     &lh LSHFT N4     &kp N5                                 &kp N6        &rh RSHFT N7  &rh RCTL N8   &rh RALT N9 &rh RGUI N0
               &kp QMARK    &trans       &kp EQUAL       &kp MINUS        &trans                                 &trans        &trans        &trans        &trans      &trans
                            &trans       &trans          &trans           &trans         &trans    &trans        &trans        &trans        &trans        &trans
            >;
        };

        media_layer {
            label = "Media";

            bindings = <
               &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF &bootloader       &trans                            &out OUT_TOG       &out OUT_USB      &out OUT_BLE       &trans         &trans
               &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI &rgb_ug RGB_BRI   &trans                            &bt BT_CLR         &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3   &bt BT_SEL 4
               &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD &rgb_ug RGB_BRD   &trans                            &ext_power EP_TOG  &ext_power EP_ON  &ext_power EP_OFF  &trans         &trans
                                &trans           &trans          &trans            &trans      &trans    &trans      &trans             &trans            &trans             &trans
            >;
        };

        func_layer {
            label = "Function";

            bindings = <
               &trans       &trans       &trans       &trans        &trans                           &trans     &trans        &trans       &trans       &trans
               &lh LGUI F1  &lh LALT F2  &lh LCTL F3  &lh LSHFT F4  &kp F5                           &kp F6     &rh RSHFT F7  &rh RCTL F8  &rh RALT F9  &rh RGUI F10
               &trans       &trans       &trans       &kp F11       &trans                           &trans     &kp F12       &trans       &trans       &trans
                            &trans       &trans       &trans        &trans      &trans    &trans     &trans     &trans        &trans       &trans
            >;
        };
    };
};
